
// Math functions
// Various blank slates for math
// Feel free to uitilze them for your BubbleTea projects

fn main() {
    v pi: 3.1415926535897932384626433832795028841971;

    v n: num(inp("Enter a number you wish to find the values of (must be numeric): "));
    v pow: num(inp("Enter a power for that number (must be numeric): "));
    pln("");
    pln("Degree: " | deg(n, pi));
    pln("Factorial: " | factorial(n));
    pln("Power: " | power(n, pow));
    pln("Sine: " | sin(n, pi));
    pln("Cosine: " | cos(n, pi));
}

// Degree
fn deg(x, pi) {
    v rad: x * pi / 180;
    rad
}

// Factorial power of a number
fn factorial(n) {
    v result: 1.0;
    while n > 1.0 {
        vup result: result * n;
        vup n: n - 1.0;
        // Print buffer
        p("");
    };
    // Return factorial
    result
}

// Power of a number by a second power num
fn power(x, n) {
    v result: 1.0;
    while n > 0 {
        vup result: result * x;
        vup n: n - 1;
        // Print buffer
        p("");
    };
    // ^ ; Allows the program to continue after while 

    // Return the power
    result
}

// Trig sine function
fn sin(x, pi) {
    v k: 0;
    v sinx: 0;
    while x >: pi {
        vup x: x - pi;
        // Print buffer
        p("");
    };
    // ^ ; Allows the program to continue after while 
    
    if pi > x && x > pi / 2 {
        // Printbuffer
        p("");
    };

    while k < 15 {
        vup sinx: sinx + power(-1, k) * power(x, (2 * k + 1)) / factorial(2 * k + 1);
        vup k: k + 1;
        // Print buffer
        p("");
    };
    // ^ ; Allows the program to continue after while 

    // Return value of sine
    v s: sinx;
    s
}

// Trig cosine function
fn cos(x, pi) {
    // Call sine
    v cosx: sin(pi / 2 - x, pi);
    
    // Return cosine
    cosx
}
